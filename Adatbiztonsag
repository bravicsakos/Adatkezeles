def euklidesz(a: int, b: int, d: int):
    d = a
    if b != 0:
        return euklidesz(b, a % b, d)
    return d


def kibovitett_euklidesz(a, b):
    x0, x1, y0, y1, s = 1, 0, 0, 1, 1
    while b != 0:
        r, q = a % b, int(a / b)
        a, b = b, r
        x, y = x1, y1
        x1, y1 = q * x1 + x0, q * y1 + y0
        x0, y0 = x, y
        s = -s
    x, y = s * x0, -y0
    (d, x, y) = (a, x, y)
    return d, x, y


def gyorshatvany(alap, exp, mod):
    alap = alap % mod
    if exp == 0:
        return 0
    if exp == 1:
        return alap
    if exp % 2 == 0:
        return gyorshatvany(alap * alap % mod, exp/2, mod)
    return alap * gyorshatvany(alap, exp - 1, mod) % mod


if __name__ == "__main__":
    print(gyorshatvany(129, 97, 171))
